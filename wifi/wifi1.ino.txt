#include <SoftwareSerial.h>

SoftwareSerial esp8266(7, 6); // RX, TX

void setup()
{
    Serial.begin(9600);
    esp8266.begin(9600);

    //sendData("AT+RST\r\n",2000,DEBUG); // reset module
    //sendData("AT+CWMODE=2\r\n",1000,DEBUG); // configure as access point

    sendData("AT+CIFSR\r\n",1000); // get ip address
    delay(5000);
    sendData("AT+CIPMUX=1\r\n",1000); // configure for multiple connections
    delay(5000);
    sendData("AT+CIPSERVER=1,80\r\n",1000); // turn on server on port 80
    delay(5000);
}
 
void loop()
{
    // check if the esp is sending a message
    if (esp8266.available()) 
    {

        if (esp8266.find("+IPD,"))
        {
            delay(1000);

            int connectionId = esp8266.read() - 48;
            // subtract 48 because the read() function returns 
            // the ASCII decimal value and 0 (the first decimal number) starts at 48

            String webpage = "<h1>Hello</h1><h2>World!</h2><button>LED1</button>";

            String cipSend = "AT+CIPSEND=";
            cipSend += connectionId;
            cipSend += ",";
            cipSend += webpage.length();
            cipSend += "\r\n";

            sendData(cipSend,1000);
            sendData(webpage,1000);

            webpage="<button>LED2</button>";

            cipSend = "AT+CIPSEND=";
            cipSend += connectionId;
            cipSend += ",";
            cipSend += webpage.length();
            cipSend += "\r\n";

            sendData(cipSend, 1000);
            sendData(webpage, 1000);

            String closeCommand = "AT+CIPCLOSE="; 
            closeCommand += connectionId; // append connection id
            closeCommand += "\r\n";

            sendData(closeCommand,3000);
        }
    }
}
 
 
String sendData(String command, const int timeout)
{
    esp8266.print(command); // send the read character to the esp8266

    String response = "";
    long int time = millis();

    while ((time+timeout) > millis())
    {
        while (esp8266.available())
        {
            // The esp has data so display its output to the serial window 
            char c = esp8266.read(); // read the next character.
            response+=c;
        }
    }

    return response;
}

